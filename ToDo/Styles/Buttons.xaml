<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ToDo">




    <!-- Hoverless Button -->
    <Style TargetType="Button" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{StaticResource MainTextBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SystemIcon Button-->
    <Style TargetType="Button" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"></Setter>
        <Setter Property="Padding" Value="10"></Setter>
    </Style>

    <!--ControlButtons-->
    <Style TargetType="Button" x:Key="ControlButton">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"></Setter>
        <Setter Property="Foreground" Value="{StaticResource MainTextBrush}"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{StaticResource FontAwesome}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource ActiveControlBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Window close button-->
    <Style x:Key="CloseButton" TargetType="Button" BasedOn="{StaticResource ControlButton}">
        <Setter Property="FontSize" Value="15" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabbedButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AppBackgroundBrush}"></Setter>
        <Setter Property="BorderThickness" Value="2 2 2 0"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource ActiveControlBrush}"></Setter>
    </Style>

    <!--AnimatedIconButton-->
    <Style TargetType="Button" x:Key="AnimatedButton" BasedOn="{StaticResource ControlButton}">
        <Style.Resources>
            <Storyboard x:Key="SpinAndSlideToLeft">
                <DoubleAnimation 
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                    From="0"
                    To="360"
                    Duration="0:0:2">
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetProperty="(Canvas.Left)"
                                 Duration="0:0:2"
                                 From="-30"
                                 To="0"></DoubleAnimation>
            </Storyboard>
            <Storyboard x:Key="SpinAndSlideToRight">
                <DoubleAnimation 
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                    From="0"
                    To="360"
                    Duration="0:0:2">
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetProperty="(Canvas.Left)"
                                 From="0"
                                 To="30"></DoubleAnimation>
            </Storyboard>
        </Style.Resources>
        <Setter Property="Visibility" Value="{Binding IsEditing,Converter={local:BooleanToVisibiltyValueConvertor},ConverterParameter=smth}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Visibility,RelativeSource={RelativeSource TemplatedParent}}" Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource SpinAndSlideToRight}"></BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource SpinAndSlideToLeft}"/>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--Rount button-->
    <Style TargetType="Button" x:Key="RoundButton">
        <Setter Property="Background" Value="Red"></Setter>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"></Setter>
        <Setter Property="Foreground" Value="{StaticResource MainTextBrush}"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Margin" Value="20"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="{TemplateBinding Padding}" CornerRadius="50" Background="{TemplateBinding Background}">
                        <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{StaticResource FontAwesome}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource ActiveControlBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>